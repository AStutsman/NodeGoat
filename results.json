{
  "_links": {
    "self": {
      "href": "/scan/d8e1aa66-d83f-40fe-952f-ac159ab312e5"
    },
    "root": {
      "href": "/"
    },
    "help": {
      "href": "https://help.veracode.com/reader/LMv_dtSHyb7iIxAQznC~9w/56JX_MvP4edL8JB_h8ywGA"
    }
  },
  "results": {
    "TestResults": {
      "GLIssues": {},
      "Issues": {
        "Issue": [
          {
            "IssueTypeId": "crypto",
            "Severity": "3",
            "Title": "express",
            "FlawMatch": {
              "CauseHash": "2275449179",
              "CauseHashOrdinal": "1",
              "PrototypeHash": "211846691",
              "ProcedureHash": "395760414",
              "CauseHashCount": "1",
              "FlawHashOrdinal": "1",
              "FlawHash": "1867258100",
              "FlawHashCount": "1"
            },
            "GOB": "B",
            "DisplayText": "\u003cspan\u003eThis Express application does not appear to use a known library or tool to protect against cross-site request forgery. \u003c/span\u003e \u003cspan\u003eEnsure that all actions and routes that modify data are either protected with anti-CSRF tokens, or are designed in such a way to eliminate CSRF risk.\u003c/span\u003e \u003cspan\u003eReferences: \u003ca href\u003d\"https://cwe.mitre.org/data/definitions/352.html\"\u003eCWE\u003c/a\u003e \u003ca href\u003d\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet\"\u003eOWASP\u003c/a\u003e\u003c/span\u003e",
            "Files": {
              "SourceFile": {
                "FunctionName": "!main",
                "QualifiedFunctionName": "!main",
                "FunctionPrototype": "void !main()",
                "File": "server.js",
                "Scope": "UNKNOWN",
                "Line": "16"
              }
            },
            "IssueType": "Cross-Site Request Forgery (CSRF)",
            "FlawDetailsLink": "https://downloads.veracode.com/securityscan/cwe/v4/java/352.html",
            "CWEId": "352",
            "VCId": "352.001",
            "IssueId": "1001"
          },
          {
            "IssueTypeId": "crypto",
            "Severity": "3",
            "Title": "swig.setDefaults",
            "FlawMatch": {
              "CauseHash": "1176028798",
              "CauseHashOrdinal": "1",
              "PrototypeHash": "3583971938",
              "ProcedureHash": "2622624213",
              "CauseHashCount": "1",
              "FlawHashOrdinal": "2",
              "FlawHash": "3132762339",
              "FlawHashCount": "2"
            },
            "GOB": "B",
            "DisplayText": "\u003cspan\u003eWhen the \u0027autoescape\u0027 property is set to false in a call to swig.setDefaults(), a significant line of defense against cross-site scripting attacks is disabled.\u003c/span\u003e \u003cspan\u003eWhere unfiltered output is required, use individual instances of the safe filter and regularly review their use to ensure mitigation against XSS attacks is in place.\u003c/span\u003e \u003cspan\u003eReferences: \u003ca href\u003d\"http://cwe.mitre.org/data/definitions/86.html\"\u003eCWE\u003c/a\u003e\u003c/span\u003e",
            "Files": {
              "SourceFile": {
                "FunctionName": "!func",
                "QualifiedFunctionName": "!main.!lambda1.!func",
                "FunctionPrototype": "!js_object !func(!js_object, !js_object, !js_object, ...)",
                "File": "server.js",
                "Scope": "^::!main::!lambda1",
                "Line": "135"
              }
            },
            "IssueType": "Improper Neutralization of Invalid Characters in Identifiers in Web Pages",
            "FlawDetailsLink": "https://downloads.veracode.com/securityscan/cwe/v4/java/86.html",
            "CWEId": "86",
            "VCId": "86.001",
            "IssueId": "1002"
          },
          {
            "IssueTypeId": "crypto",
            "Severity": "2",
            "Title": "!func",
            "FlawMatch": {
              "CauseHash": "1655898003",
              "CauseHashOrdinal": "1",
              "PrototypeHash": "3583971938",
              "ProcedureHash": "2622624213",
              "CauseHashCount": "1",
              "FlawHashOrdinal": "1",
              "FlawHash": "1659954946",
              "FlawHashCount": "1"
            },
            "GOB": "B",
            "DisplayText": "\u003cspan\u003eThis call to !func() adds a cookie to the HTTP response that does not have the Secure attribute set.  Failing to set this attribute allows the browser to send the cookie unencrypted over an HTTP session. \u003c/span\u003e \u003cspan\u003eSet the Secure attribute for all cookies used by HTTPS sessions.\u003c/span\u003e \u003cspan\u003eReferences: \u003ca href\u003d\"http://cwe.mitre.org/data/definitions/614.html\"\u003eCWE\u003c/a\u003e \u003ca href\u003d\"http://webappsec.pbworks.com/Insufficient-Transport-Layer-Protection\"\u003eWASC\u003c/a\u003e\u003c/span\u003e",
            "Files": {
              "SourceFile": {
                "FunctionName": "!func",
                "QualifiedFunctionName": "!main.!lambda1.!func",
                "FunctionPrototype": "!js_object !func(!js_object, !js_object, !js_object, ...)",
                "File": "server.js",
                "Scope": "^::!main::!lambda1",
                "Line": "80"
              }
            },
            "IssueType": "Sensitive Cookie in HTTPS Session Without \u0027Secure\u0027 Attribute",
            "FlawDetailsLink": "https://downloads.veracode.com/securityscan/cwe/v4/java/614.html",
            "CWEId": "614",
            "VCId": "614.002",
            "IssueId": "1000"
          }
        ]
      }
    }
  },
  "scan_status": "SUCCESS",
  "gl_scanner_java": "19.3.1-0",
  "commit_hash": "5ee58d2015f0d04a52ff0bcdd1cefb9861a89efd",
  "project_name": "NodeGoat"
}